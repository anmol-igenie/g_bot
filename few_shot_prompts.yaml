List all "My Brands" or what brands I own: '
  # Filter for rows where MyBrand is 1

  df_my_brands = data[data[''MyBrand''] == 1][''Brand''].unique()

  df_my_brands
  '

overall score across all channels: '
  # Group by Channel and calculate the mean score across all channels

  df_overall_score = data.groupby(''Channel'')[''Score''].mean()

  df_overall_score
  '

What is the overall score across attributes for the latest month?: '

  # All unique months

  unique_months = data[''Year_Month''].unique()

  # Sorted unique months 

  sorted_unique_months = sorted(unique_months, reverse=True)

  # Filter data for the past 3 months

  past_1_months = sorted_unique_months[:1]

  df_last_1_month = data[data[''Year_Month''].isin(past_1_months)]

  # Group by Detailed Metric and calculate the mean score across attributes for the latest month

  df_overall_score_attributes = df_last_1_month.groupby([''Year_Month'',''Brand Pulse Component''])[''Score''].mean()

  df_overall_score_attributes
  '

filter the latest / past 3 months data: '
  # All unique months

  unique_months = data[''Year_Month''].unique()

  # Sorted unique months 

  sorted_unique_months = sorted(unique_months, reverse=True)

  # Filter data for the past 3 months

  past_3_months = sorted_unique_months[:3]

  df_last_3_months = data[data[''Year_Month''].isin(past_3_months)]

  df_last_3_months
'

What are the Beat Scores of my brands?: '
  # Filter the dataframe for ''MyBrand'' == 1 and ''Score_Type'' == ''Beat Score''

  my_brands_beat_scores = data[(data[''MyBrand''] == 1) & (data[''Score_Type''] == ''Beat Score'')]

  # Sanity check: Ensure the filtered dataframe is not empty

  assert not my_brands_beat_scores.empty, "No Beat Scores found for your brands."

  # Aggregate the scores by brand

  beat_scores_by_brand = my_brands_beat_scores.groupby(''Brand'')[''Score''].mean().reset_index()

  # Sort the results by score in descending order

  beat_scores_by_brand = beat_scores_by_brand.sort_values(by=''Score'', ascending=False)

  beat_scores_by_brand
'

Which brand has the highest score in the Buzz component?: '
  # Filter the dataframe for the ''Buzz'' component

  buzz_df = data[data[''Brand Pulse Component''] == ''Buzz'']

  # Ensure there are rows after filtering

  assert not buzz_df.empty, "No data available for the ''Buzz'' component."

  # Find all the brands with the highest Buzz score

  highest_buzz_rows = buzz_df.loc[buzz_df[''Score'']==(buzz_df[''Score''].max()),''Brand''].unique()

  highest_buzz_rows
'